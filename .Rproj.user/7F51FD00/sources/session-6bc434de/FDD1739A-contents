#positionnement
setwd(dir = "/Users/williamdevos/Documents/Maitrise/Data")

# load(file = "coll_data_JAGS.RData")
# str(coll.data.JAGS)

load("SEM_data_JAGS.RData")

hist(data.JAGS$coll$weight)

identical(data.JAGS$coll$site, data.JAGS$Obs_cov$ID)
paste(data.JAGS$coll$sites, "--", data.JAGS$Obs_cov$ID)

# ##order rows according to site
# coll.data.JAGS.ORD <- coll.data.JAGS
# coll.data.JAGS.ORD$Obs_cov <- coll.data.JAGS$Obs_cov[order(coll.data.JAGS$Obs_cov$ID), ]
# coll.data.JAGS.ORD$biomass <- coll.data.JAGS$biomass[order(coll.data.JAGS$biomass$sites), ]
# 
# identical(coll.data.JAGS.ORD$biomass$sites, coll.data.JAGS.ORD$Obs_cov$ID)
# 
# ##collembola biomass 
# Biomasse <- coll.data.JAGS.ORD$biomass$weight
# 
# ##cutting treatment
# Coupe <- coll.data.JAGS.ORD$Obs_cov$Coupe
# ##numeric ID to select groups
# CoupeNum <- as.numeric(coll.data.JAGS.ORD$Obs_cov$Coupe)


##collembola biomass
Biomasse <- data.JAGS$coll$weight

##cutting treatment
Coupe <- data.JAGS$Obs_cov$Coupe
##numeric ID to select groups
CoupeNum <- as.numeric(data.JAGS$Obs_cov$Coupe)
#3=témoin, 1=partielle, 2=totale


# transform cutting treatment in binary
Cutcontrol<- ifelse(Coupe == "temoin", 1, 0)
Cutpartial<- ifelse(Coupe == "partielle", 1, 0)
Cutclear<- ifelse(Coupe == "totale", 1, 0)

# nsites
nsites <- length(Biomasse)
#ngroups<-length(unique(Coupe$traitements))


## model biomass ~ dnorm()
modelstring <- "
model {
  ## Priors
  beta0 ~ dnorm(0, 0.01)
  beta.Cutpartial ~ dnorm(0, 0.01)
  beta.Cutclear ~ dnorm(0, 0.01)

##different variance for each group
for(j in 1:3) {
  tau[j] <- pow(sigma[j], -2)
  sigma[j] ~ dunif(0, 150)
}


  ## Likelihood
  for (i in 1:nsites) {
     mu[i] <- beta0 + 
                   beta.Cutpartial*Cutpartial[i] +
                   beta.Cutclear*Cutclear[i]

     Biomasse[i] ~ dnorm(mu[i], tau[CoupeNum[i]])
  }

##predicted values
for(i in 1:nsites) {
pred[i] <- mu[i]

##raw residuals
res[i] <- Biomasse[i] - mu[i]
##Pearson residuals
res.pearson[i] <- res[i]/sigma[CoupeNum[i]]

}

}
"
writeLines(modelstring, con = "Coll_BioMasse_Cut-hetVar.jags")



## list of data

lin.data <- list(
  Biomasse = as.numeric(Biomasse),
  Cutpartial = as.numeric(Cutpartial),
  Cutclear = as.numeric(Cutclear),
  CoupeNum = CoupeNum,
  nsites = nsites
)
str(lin.data)


# initial values of intercepts
inits <- function( ){
  list(beta0 = rnorm(1),
       beta.Cutpartial = rnorm(1),
       beta.Cutclear = rnorm(1),
       sigma = rlnorm(3))
}


# output
params <- c("beta0", 
            "beta.Cutpartial",
            "beta.Cutclear",
            "sigma",
            "pred", "res", "res.pearson")

## MCMC settings
## chains
nc <- 5

## iterations
ni <- 100000

## burn-in
nb <- 50000

## thinning rate (save 1 obs per 5 iterations)
nt <- 5

library(jagsUI)

out.coll <- jags(data = lin.data,
                 inits = inits,
                 parameters = params,
                 model = "Coll_BioMasse_Cut-hetVar.jags",
                 n.thin = nt,
                 n.chains = nc,
                 n.burnin = nb,
                 n.iter = ni,
                 n.adapt = 10000)


# save(out.coll, file = "out_coll_100K50Kb_BMxCut_hetVar.17oct23.Rdata")
# save(out.coll, file = "out_coll_100K50Kb_BMxCut_hetVar.23oct23.Rdata")
# 
# load("out_coll_100K50Kb_BMxCut_hetVar.Rdata")

load("out_coll_100K50Kb_BMxCut_hetVar.17oct23.Rdata")

print(out.coll, digits = 3)

out.coll$summary[c("beta0", 
                   "beta.Cutpartial",
                   "beta.Cutclear",
                   "sigma[1]", "sigma[2]", "sigma[3]"), 
                 c("mean", "sd", "2.5%", "97.5%", "Rhat")]

##Rhat
hist(out.coll$summary[, "Rhat"])
any(out.coll$summary[, "Rhat"] > 1.1)

par(mfrow = c(2, 3), 
    mar = c(4, 4, 2, 2))

matplot(cbind(out.coll$samples[[1]][, "beta0"], 
              out.coll$samples[[2]][, "beta0"], 
              out.coll$samples[[3]][, "beta0"],
              out.coll$samples[[4]][, "beta0"],
              out.coll$samples[[5]][, "beta0"]),
        type = "l", 
        ylab = "beta0", xlab = "iteration", cex.lab = 1.2)

matplot(cbind(out.coll$samples[[1]][, "beta.Cutpartial"], 
              out.coll$samples[[2]][, "beta.Cutpartial"], 
              out.coll$samples[[3]][, "beta.Cutpartial"],
              out.coll$samples[[4]][, "beta.Cutpartial"],
              out.coll$samples[[5]][, "beta.Cutpartial"]),
        type = "l", 
        ylab = "beta.Cutpartial", xlab = "iteration", cex.lab = 1.2)

matplot(cbind(out.coll$samples[[1]][, "beta.Cutclear"], 
              out.coll$samples[[2]][, "beta.Cutclear"], 
              out.coll$samples[[3]][, "beta.Cutclear"],
              out.coll$samples[[4]][, "beta.Cutclear"],
              out.coll$samples[[5]][, "beta.Cutclear"]),
        type = "l", 
        ylab = "beta.Cutclear", xlab = "iteration", cex.lab = 1.2)

matplot(cbind(out.coll$samples[[1]][, "sigma[1]"], 
              out.coll$samples[[2]][, "sigma[1]"], 
              out.coll$samples[[3]][, "sigma[1]"],
              out.coll$samples[[4]][, "sigma[1]"],
              out.coll$samples[[5]][, "sigma[1]"]),
        type = "l", 
        ylab = "sigma[1]", xlab = "iteration", cex.lab = 1.2)

matplot(cbind(out.coll$samples[[1]][, "sigma[2]"], 
              out.coll$samples[[2]][, "sigma[2]"], 
              out.coll$samples[[3]][, "sigma[2]"],
              out.coll$samples[[4]][, "sigma[2]"],
              out.coll$samples[[5]][, "sigma[2]"]),
        type = "l", 
        ylab = "sigma[2]", xlab = "iteration", cex.lab = 1.2)


matplot(cbind(out.coll$samples[[1]][, "sigma[3]"], 
              out.coll$samples[[2]][, "sigma[3]"], 
              out.coll$samples[[3]][, "sigma[3]"],
              out.coll$samples[[4]][, "sigma[3]"],
              out.coll$samples[[5]][, "sigma[3]"]),
        type = "l", 
        ylab = "sigma[3]", xlab = "iteration", cex.lab = 1.2)


##using coda package for additional diagnostics
library(coda)
##convert to mcmc.list( ) for coda
outmc <- mcmc.list(out.coll$samples[[1]],
                   out.coll$samples[[2]],
                   out.coll$samples[[3]],
                   out.coll$samples[[4]],
                   out.coll$samples[[5]])

##save summary in object
coda.out <- summary(outmc)
range(coda.out$statistics[, "Time-series SE"]/coda.out$statistics[, "SD"])

##graphics to compare groups, IC 95%

par(mfcol = c(1, 1),
    mar = c(5.1, 5.1, 4.1, 4.1))

diff.1v2 <- out.coll$sims.list$beta0 -
  out.coll$sims.list$beta.Cutpartial
hist(diff.1v2, main = "Différence des distributions de postérieurs, \npour la probabilité d'occupation des collemboles",
     xlab = "Témoin vs coupe partielle",
     ylab = "Fréquence"
)
quant1v2 <- quantile(diff.1v2, probs = c(0.025, 0.975))
abline(
  v = quant1v2,
  lty = 2,
  col = "red",
  lwd = 3
)
quant1v2

diff.1v3 <- out.coll$sims.list$beta0 -
  out.coll$sims.list$beta.Cutclear
hist(diff.1v3, main = "Différence des distributions de postérieurs, \npour la probabilité d'occupation des collemboles",
     xlab = "Témoin vs coupe totale",
     ylab = "Fréquence")
quant1v3 <- quantile(diff.1v3, probs = c(0.025, 0.975))
abline(
  v = quant1v3,
  lty = 2,
  col = "red",
  lwd = 3
)
quant1v3

diff.2v3 <- out.coll$sims.list$beta.Cutpartial -
  out.coll$sims.list$beta.Cutclear
hist(diff.2v3, main = "Différence des distributions de postérieurs, \npour la probabilité d'occupation des collemboles",
     xlab = "Coupe partielle vs coupe totale",
     ylab = "Fréquence")
quant2v3 <- quantile(diff.2v3, probs = c(0.025, 0.975))
abline(
  v = quant2v3,
  lty = 2,
  col = "red",
  lwd = 3
)
quant2v3


##graphics to compare groups, IC 90%

par(mfrow = c(1, 1))

diff.1v2 <- out.coll$sims.list$beta0 -
  out.coll$sims.list$beta.Cutpartial
hist(diff.1v2, main = "Différence des distributions de postérieurs, \npour la probabilité d'occupation des collemboles",
     xlab = "Témoin vs coupe partielle",
     ylab = "Fréquence"
)
quant1v2 <- quantile(diff.1v2, probs = c(0.05, 0.95))
abline(
  v = quant1v2,
  lty = 2,
  col = "red",
  lwd = 3
)
quant1v2

diff.1v3 <- out.coll$sims.list$beta0 -
  out.coll$sims.list$beta.Cutclear
hist(diff.1v3, main = "Différence des distributions de postérieurs, \npour la probabilité d'occupation des collemboles",
     xlab = "Témoin vs coupe totale",
     ylab = "Fréquence")
quant1v3 <- quantile(diff.1v3, probs = c(0.05, 0.95))
abline(
  v = quant1v3,
  lty = 2,
  col = "red",
  lwd = 3
)
quant1v3

diff.2v3 <- out.coll$sims.list$beta.Cutpartial -
  out.coll$sims.list$beta.Cutclear
hist(diff.2v3, 
     main = "Différence des distributions de postérieurs, \npour la probabilité d'occupation des collemboles",
     xlab = "Coupe partielle vs coupe totale",
     ylab = "Fréquence")

quant2v3 <- quantile(diff.2v3, probs = c(0.05, 0.95))
abline(
  v = quant2v3,
  lty = 2,
  col = "red",
  lwd = 3
)
quant2v3




## graphic biomass ~ cut

outSum.coll <-
  out.coll$summary [, c("mean", "sd", "2.5%", "97.5%", "Rhat")]
outSum.coll

# sample data
coll_data <- data.frame(
  treatments = c("Témoin", "Coupe partielle", "Coupe totale"),
  mean = c(outSum.coll[1:3, 1]),
  lower = c(outSum.coll[1:3, 3]),
  upper = c(outSum.coll[1:3, 4])
)

coll_data

par(mfcol = c(1, 1),
    mar = c(5.1, 5.1, 4.1, 4.1))


# Create a  plot
plot(
  NA,
  xlim = c(0, 4),
  ylim = c(0, 40),
  main = "Collemboles",
  xlab = "Coupes forestières",
  ylab = expression(paste("Biomasse (", mu, "g)")),
  xaxt = "n",
  cex.axis = 1.2,
  cex.lab = 1.2,
  cex.main = 1.5)

# Add lines for each treatment
segments(
  x0 = 1:3,
  y0 = coll_data$lower,
  1:3,
  coll_data$upper,
  col = "black",
  lwd = 2
)

# Add points for mean occupation probabilities
points(
  x = 1:3,
  y = coll_data$mean,
  pch = 19,
  col = "black",
  lwd = 4
)

axis(1, at = 1:3, labels = coll_data$treatments, lwd = 1, padj = 0.5)




#autocorrelation

par(mfcol = c(3, 2), 
    mar = c(4, 4, 4, 2))

##beta0
acf(out.coll$samples[[1]][, "beta0"], 
    main = "beta0 (chain 1)", cex.lab = 1.2, cex.axis = 1.2)
acf(out.coll$samples[[2]][, "beta0"], 
    main = "beta0 (chain 2)", cex.lab = 1.2, cex.axis = 1.2)
acf(out.coll$samples[[3]][, "beta0"], 
    main = "beta0 (chain 3)", cex.lab = 1.2, cex.axis = 1.2)
acf(out.coll$samples[[4]][, "beta0"], 
    main = "beta0 (chain 4)", cex.lab = 1.2, cex.axis = 1.2)
acf(out.coll$samples[[5]][, "beta0"], 
    main = "beta0 (chain 5)", cex.lab = 1.2, cex.axis = 1.2)

par(mfcol = c(3, 2), 
    mar = c(4, 4, 4, 2))

##beta.Cutpartial
acf(out.coll$samples[[1]][, "beta.Cutpartial"], 
    main = "beta.Cutpartial (chain 1)", cex.lab = 1.2, cex.axis = 1.2)
acf(out.coll$samples[[2]][, "beta.Cutpartial"], 
    main = "beta.Cutpartial (chain 2)", cex.lab = 1.2, cex.axis = 1.2)
acf(out.coll$samples[[3]][, "beta.Cutpartial"], 
    main = "beta.Cutpartial (chain 3)", cex.lab = 1.2, cex.axis = 1.2)
acf(out.coll$samples[[4]][, "beta.Cutpartial"], 
    main = "beta.Cutpartial (chain 4)", cex.lab = 1.2, cex.axis = 1.2)
acf(out.coll$samples[[5]][, "beta.Cutpartial"], 
    main = "beta.Cutpartial (chain 5)", cex.lab = 1.2, cex.axis = 1.2)

par(mfcol = c(3, 2), 
    mar = c(4, 4, 4, 2))


#distribution des postérieur

par(mfcol = c(2, 3), 
    mar = c(4, 4, 4, 2))

#beta0
hist(out.coll$sims.list$beta0,
     xlab = "beta0", 
     main = "Posterior density")

#beta.Cutpartial
hist(out.coll$sims.list$beta.Cutpartial,
     xlab = "beta.Cutpartial", 
     main = "Posterior density")

#beta.Cutclear
hist(out.coll$sims.list$beta.Cutclear,
     xlab = "beta.Cutclear", 
     main = "Posterior density")

hist(out.coll$sims.list$sigma[, 1],
     xlab = "sigma[1]", 
     main = "Posterior density")

hist(out.coll$sims.list$sigma[, 2],
     xlab = "sigma[2]", 
     main = "Posterior density")

hist(out.coll$sims.list$sigma[, 3],
     xlab = "sigma[3]", 
     main = "Posterior density")


##check diagnostics
res <- out.coll$summary[paste("res[", 1:nsites, "]", sep = ""), "mean"]
res.pearson <- out.coll$summary[paste("res.pearson[", 1:nsites, "]", sep = ""), "mean"]
pred <- out.coll$summary[paste("pred[", 1:nsites, "]", sep = ""), "mean"]
qqnorm(res)
qqline(res)
##raw residuals - evidence of heteroskedasticity
plot(res ~ pred)
##Pearson standardized residuals suggest variance differs across groups
plot(res.pearson ~ pred)



## graphique

outSum.coll <-
  out.coll$summary [, c("mean", "sd", "2.5%", "97.5%", "Rhat")]
outSum.coll

# sample data
coll_data <- data.frame(
  treatments = c("Control", "Partial-Cut", "Clear Cut"),
  mean = c(outSum.coll[1:3, 1]),
  lower = c(outSum.coll[1:3, 3]),
  upper = c(outSum.coll[1:3, 4])
)

coll_data

par(mar = c(5.1, 5.1, 4.1, 4.1))

# Create a  plot
plot(
  NA,
  xlim = c(0, 4),
  ylim = c(-15, 40),
  main = "Collemboles",
  xlab = "Coupes forestières",
  ylab = "Biomasse",
  xaxt = "n",
  cex.axis = 1,
  cex.lab = 1)

# Add lines for each treatment
segments(
  x0 = 1:3,
  y0 = coll_data$lower,
  1:3,
  coll_data$upper,
  col = "black",
  lwd = 2
)

# Add points for mean occupation probabilities
points(
  x = 1:3,
  y = coll_data$mean,
  pch = 19,
  col = "black",
  lwd = 4
)

axis(1, at = 1:3, labels = coll_data$treatments, lwd = 1, padj = 0.5)


